#!/bin/bash
# Install all dotfiles into the home directory

if [[ -L "$0" ]]; then
  SCRIPTSETUP="$(readlink "$0")"
else
  SCRIPTSETUP="$0"
fi

DOTFILESDIRREL=$(dirname "${SCRIPTSETUP}")
cd "${DOTFILESDIRREL}"/.. || exit
DOTFILESDIR=$(pwd -P)

[[ "$(uname -s)" = "Darwin" ]] && export MACOS=1 && export UNIX=1
[[ "$(uname -s)" = "Linux" ]] && export LINUX=1 && export UNIX=1
uname -s | grep -q "_NT-" && export WINDOWS=1
[[ -n "$LINUX" ]] && grep -qEi "(Microsoft|WSL)" /proc/version && export WSL=1

if [[ -n "${MACOS}" ]]; then
  VSCODE="${HOME}/Library/Application Support/Code/User"
  CURSOR="${HOME}/Library/Application Support/Cursor/User"
elif [[ -n "${LINUX}" ]]; then
  VSCODE="${HOME}/.config/Code/User"
  CURSOR="${HOME}/.config/Cursor/User"
elif [[ -n "${WINDOWS}" ]]; then
  VSCODE="${APPDATA}/Code/User"
  CURSOR="${APPDATA}/Cursor/User"
fi
ZED="${HOME}/.config/zed/settings.json"

for DOTFILE in *; do
  HOMEFILE="${HOME}/.${DOTFILE}"
  [[ -d "${DOTFILE}" ]] && DOTFILE="${DOTFILE}/"
  DIRFILE="${DOTFILESDIR}/${DOTFILE}"

  # Don't mess with Codespaces' default GPG/SSH setup.
  if [ -n "$CODESPACES" ]; then
    echo $DOTFILE | egrep -q '^(gnupg|ssh)/' && continue
  fi

  # Don't try to install documentation/script files
  echo $DOTFILE | egrep -q '(^script/$|\.txt$|\.md$)' && continue

  # Fixup VSCode settings path
  echo $DOTFILE | grep -q 'vscode-settings' &&
    HOMEFILE="$VSCODE/settings.json" &&
    mkdir -p "$VSCODE"

  # Remove .sh extensions
  echo $DOTFILE | grep -q '\.sh' &&
    HOMEFILE="$HOME/.$(echo $DOTFILE | sed -e 's/\.sh//')"

  # Fixup RuboCop configuration (if possible)
  if echo $DOTFILE | grep -q 'rubocop-work.yml'; then
    HOMEWORK="$HOME/Workbrew"
    [ -d $HOMEWORK ] || continue
    HOMEFILE="$HOMEWORK/.rubocop.yml"
  elif echo $DOTFILE | grep -q 'rubocop-oss.yml'; then
    HOMEOSS="$HOME/OSS"
    [ -d $HOMEOSS ] || continue
    HOMEFILE="$HOMEOSS/.rubocop.yml"
  fi

  if [ $UNIX ]; then
    if [ -L "$HOMEFILE" ] && ! [ -d $DOTFILE ]; then
      ln -sfv "$DIRFILE" "$HOMEFILE"
    else
      rm -rv "$HOMEFILE" 2>/dev/null
      ln -sv "$DIRFILE" "$HOMEFILE"
    fi
  else
    cp -rv "${DIRFILE}" "${HOMEFILE}"
  fi
done

HOMEDOTFILES="$HOME/.dotfiles"
if [ "$DOTFILESDIR" != "$HOMEDOTFILES" ]; then
  ln -sf "$DOTFILESDIR" "$HOMEDOTFILES"
fi

# Setup my home directory how I like it
mkdir -pv ~/Development/Projects/Opensource ~/Development/Projects/Personal ~/Development/Projects/Work

if [ -n "$CODESPACES" ]; then
  # Fix up Codespaces permissions
  chmod 700 /workspaces

  # Don't try to git gc github/github, it happens often and takes ages
  if [ "$CODESPACE_VSCODE_FOLDER" = "/workspaces/github" ]; then
    git -C /workspaces/github config gc.auto 0
  fi
fi

if [[ -n "${LINUX}" ]]; then
  exec script/linux-after-setup
fi
